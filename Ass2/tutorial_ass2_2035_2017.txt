This assignment requires you to "vectorize" some code for
skewness and kurtosis you wrote on assignment 1 and to
perform timing measurements on skewness and kurtosis (MatLab functions),
my_skewness and my_kurtosis (assignment 1 functions) and
my_skewness2 and kurtosis2 (vectorized functions you write for
this assignment).

You are also asked to vectorize a mystery function given
on your assignment in function vectorized_mystery_calculation(x,y).
serialized_mystery_calculation(x,y) is given on the course webpage
and allow you to check that your vectorized_mystery_calculation
does the correct calculation.

You are to write 4 functions and save them in a single file
along with your old code for my_skewness and my_kurtosis from
ass1_2017.m and serialized_mystery_calculation on the
course webpage in a file called ass2_2017.m:
----------------------------------------------------------
function ass2_2017(num_x)
num_x=str2num(num_x)

your code
here you run all the skewness and kurtosis and
serialized_mystery_calculation and vectorized_mystery_calculation 
functions, perform the timing measurements using tic and toc
and pretty print out the results using print format %20.12f.

end
----------------------------------------------------------
function [value]=my_skewness(x)

your code
value=...
end
----------------------------------------------------------
function [value]=my_kurtosis(x)

your code
value=...
end
----------------------------------------------------------
function result=vectorized_mystery_calculation(x,y)

code

end
----------------------------------------------------------
% my_skewness and my_kurtosis functions (as on assignment 1)
% serialized_mystery_calculation as on the course webpage
----------------------------------------------------------
function s=my_skewness2(x) 

code as on assignment 1

end % my_skewness2

----------------------------------------------------------
function my_kurtosis2(x)

code as on assignment 1

end % my_kurtosis2

----------------------------------------------------------
function serialized_mystery_calculation(x,y)

code as on course webpage

end % serialized_mystery_calculation
----------------------------------------------------------

An example of serialized and vectorized code with
timing measurements using tic/toc,

Below is a function that code a function in a serialized
version using individual array and a for loop and then
shows the vectorized version using the complete array and 
no loops. Both the serialized (arrays and loops)
and vectorized (arrays only) give the same answer.
Timing is performed for both functions using tic and toc.

function g_fcts(num_x)
num_x=str2num(num_x)

x=rand(num_x,1,'double');
y=rand(num_x,1,'double');

start=tic;
g1=g1_fct(x,y);
finish1=toc(start)

start=tic;
g2=g2_fct(x,y);
finish2=toc(start);

fprintf('g1_fct=%20.10f serial time=%f\n',g1_fct(x,y),finish1);
fprintf('g2_fct=%20.10f vector time=%f\n',g2_fct(x,y),finish2);
end

function value=g1_fct(x,y)
val1=0;
val2=0;
for i=1:numel(x)
   val1=val1+x(i)^2;
   val2=val2+y(i)^2;
end
top=(sum(val1)-sum(val2))^(1/3);

val1=0;
val2=0;
for i=1:numel(x)
   val1=val1+(x(i)*y(i))^(1/6);
   val2=val2+(x(i)-y(i))^(1/4);
end
bottom=sum(val1)+sum(val2);

value=top/bottom;
end

function value=g2_fct(x,y)
top=(sum(x.^2)-sum(y.^2))^(1/3);
bottom=(sum((x.*y).^(1/6))+sum((x-y).^(1/4)));
value=top/bottom;
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Your code should be nicely documented with code
that is indented and aligned so the code structures 
are obviously.  Use good variable names. Remember, 
someone who did not write this code may have to 
understand and use your code (in real life). More
likely, you may revisit your code at some later time
and documentation should be sufficient for you to 
remember what you did! An example of documented code 
can be seen in commented_new_decimal2roman.m and 
commented_new_roman2decimal.m on the course webpage. 
Your code should have a block comment to
identify you, such as:

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% John Barron, 123456789, barron@uwo.ca
% Assignment 2, Feb 19, 2017, CS2035
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Lastly all 8 functions should be in 1 file only, 
ass2_2017.m


